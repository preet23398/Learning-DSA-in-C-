1. Given a root of a binary tree or BST, find the kth smallest element in the tree.
Input:
       3
     /   \
   1     4
     \
      2

k = 1
Output: 1
Explanation: The smallest element in the binary tree is 1.

Input:
      5
    /   \
   3    6
  /   \
 2    4

k = 3
Output: 4
Explanation: The third smallest element in the binary tree is 4.

Input:
      5
    /   \
   3    6
  /   \
 2    4

k = 5
Output:6
Explanation: There are only 5 elements in the binary tree. Since k is equal to the total number of elements, the kth smallest element becomes the largest element, which is 6


2. Given the root of a binary tree, determine if it is a valid binary search tree (BST).

A valid BST is defined as follows:

The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.


Input: root = [2,1,3]
Output: true


Input: root = [5,1,4,null,null,3,6]
Output: false
Explanation: The root node's value is 5 but its right child's value is 4.

Constraints:

The number of nodes in the tree is in the range [1, 104].
-2^31 <= Node.val <= 2^31 - 1
