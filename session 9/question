[2 points] Basic Implementation of Hashtable- for both Open and closed addressing
Create a class or data structure to represent a Hashtable.(for both open and closed addressing)
Define necessary attributes and methods for the Hashtable. 

[1 points] Insertion Operation
Implement a method to insert a key-value pair into the Hashtable.(for both open and closed addressing)
Handle collisions using techniques such as chaining for closed addressing and linear probing for open addressing.[refer to pt.5]

[2 points] Deletion Operation- for both Open and closed addressing
Implement a method to delete a key-value pair from the Hashtable.
Ensure that the Hashtable remains consistent after deletion.

[2 points] Search Operation- for both Open and closed addressing
Implement a method to search for a key in the Hashtable and retrieve its corresponding value.
Handle cases where the key may or may not exist in the Hashtable.

[3 points] Collision Handling
Implement collision resolution techniques:
For Closed Addressing: Chaining
For Open Addressing:
Linear Probing
Formula: h(k, i)=(h′(k)+i) mod m

Quadratic Probing
Formula: h(k,i)=(h′(k)+i2) mod m

Double Hashing
Formula: h(k, i)=(h​1(k)+i⋅h​2​(k)) mod m
You may choose m, h1, h2 yourself. Just mention it as comments in your code. 

Where:
h′(k) is the initial hash value.
m is the size of the Hashtable.
h​1(k) and h​2​(k) are two independent hash functions for double hashing.
i is the probe number (starting from 0).
